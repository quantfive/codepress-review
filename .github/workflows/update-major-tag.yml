name: Update Major Version Tag

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write # Required to push tags

jobs:
  update-major-tag:
    # Run this job only for tags that start with 'v', which is a common convention for versioning.
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          fetch-depth: 0
        # This explicitly checks out the code at the specific commit of the version tag.
        # fetch-depth: 0 ensures we have full git history and tag information for reliable tag operations.

      - name: Extract major version from tag
        id: extract_major_version
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          # We use a regex to ensure we only process tags that follow semantic versioning, like v1.2.3
          if ! [[ "$TAG_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Tag $TAG_NAME does not match the format vX.Y.Z."
            echo "Skipping major tag update."
            exit 0 # Skip without error if the tag is not a valid semver tag
          fi

          # Extract the major version (e.g., 'v1' from 'v1.2.3')
          MAJOR_VERSION=$(echo "$TAG_NAME" | cut -d'.' -f1)
          echo "Version tag: $TAG_NAME"
          echo "Extracted major version: $MAJOR_VERSION"

          # Pass the major version to subsequent steps
          echo "major_version=$MAJOR_VERSION" >> $GITHUB_OUTPUT

      - name: Update and push major version tag
        run: |
          MAJOR_VERSION=${{ steps.extract_major_version.outputs.major_version }}
          echo "Updating tag '$MAJOR_VERSION' to point to this commit..."

          # Configure git to associate the push with the github-actions bot
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Move the major version tag to the current commit
          # The -f flag ensures that the tag is moved if it already exists
          git tag -f "$MAJOR_VERSION"

          # Force-push the updated tag to the remote repository
          git push origin "$MAJOR_VERSION" --force

          echo "Successfully updated and pushed tag '$MAJOR_VERSION'."
